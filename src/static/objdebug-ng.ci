char zDEBUGABBREV[]       = "Displays the contents of the .debug_abbrev section.";
char zDEBUGADDR[]         = "Displays the contents of the .debug_addr section.";
char zDEBUGCUINDEX[]      = "Displays the contents of the .debug_cu_index|.debug_tu_index sections.";
char zDEBUGFRAME[]        = "Display the raw contents of a .debug_frame section.";
char zDEBUGFRAMEDECODED[] = "Display the interpreted contents of a .debug_frame section.";
char zDEBUGINFO[]         = "Displays the contents of the .debug_info section.";
char zDEBUGLINKS[]        = "Displays the contents of the .gnu_debuglink|.gnu_debugaltlink sections.";
char zDEBUGMACRO[]        = "Displays the contents of the .debug_macro|.debug_macinfo sections.";
char zDEBUGLOC[]          = "Displays the contents of the .debug_loc|.debug_loclists sections.";
char zDEBUGARANGES[]      = "Displays the contents of the .debug_aranges section.";
char zDEBUGRANGES[]       = "Displays the contents of the .debug_ranges|.debug_rnglists sections.";
char zDEBUGSTR[]          = "Displays the contents of the .debug_str|.debug_line_str|.debug_str_offsets sections.";
char zDEBUGGDBINDEX[]     = "Displays the contents of the .gdb_index|.debug_names sections.";
char zDEBUGLINKSFOLLOW[]  = "Display the contents of any selected debug sections that are found in linked, separate debug info file(s).";
char zDEBUGLINE[]         = "Displays the contents of the .debug_line section in a raw format.";
char zDEBUGLINEDECODED[]  = "Displays the interpreted contents of the .debug_line section.";
char zDEBUGPUBNAMES[]     = "Displays the contents of the .debug_pubnames|.debug_gnu_pubnames sections.";
char zDEBUGPUBTYPES[]     = "Displays the contents of the .debug_pubtypes|.debug_gnu_pubtypes sections.";
char zDEBUGTRACEARANGES[] = "Displays the contents of the .trace_aranges section.";
char zDEBUGTRACEABBREV[]  = "Displays the contents of the .trace_abbrev section.";
char zDEBUGTRACEINFO[]    = "Displays the contents of the .trace_info section.";
char zDEBUGENHANCED[]     = "Displays the contents in the enhanced mode format.";

const args_t zDEBUGELFARGS[] = {
  {'a', "abbrev",             OPTDWARF_DEBUG_ABBREV,        zDEBUGABBREV},
  {'A', "addr",               OPTDWARF_DEBUG_ADDR,          zDEBUGADDR},
  {'c', "cu_index",           OPTDWARF_DEBUG_CU_INDEX,      zDEBUGCUINDEX},
  {'f', "frames",             OPTDWARF_DEBUG_FRAME,         zDEBUGFRAME},
  {'F', "frames-interp",      OPTDWARF_DEBUG_FRAME_DECODED, zDEBUGFRAMEDECODED},
  {'i', "info",               OPTDWARF_DEBUG_INFO,          zDEBUGINFO},
  {'k', "links",              OPTDWARF_DEBUG_LINK,          zDEBUGLINKS},
  {'K', "follow-links",       OPTDWARF_DEBUG_LINK_FOLLOW,   zDEBUGLINKSFOLLOW},
  {'l', "rawline",            OPTDWARF_DEBUG_LINE,          zDEBUGLINE},
  {'L', "decodedline",        OPTDWARF_DEBUG_LINE_DECODED,  zDEBUGLINEDECODED},
  {'m', "macro",              OPTDWARF_DEBUG_MACRO,         zDEBUGMACRO},
  {'o', "loc",                OPTDWARF_DEBUG_LOC,           zDEBUGLOC},
  {'r', "aranges",            OPTDWARF_DEBUG_ARANGES,       zDEBUGARANGES},
  {'R', "ranges",             OPTDWARF_DEBUG_RANGES,        zDEBUGRANGES},
  {'s', "str",                OPTDWARF_DEBUG_STR,           zDEBUGSTR},
  {'p', "pubnames",           OPTDWARF_DEBUG_PUBNAMES,      zDEBUGPUBNAMES},
  {'t', "pubtypes",           OPTDWARF_DEBUG_PUBTYPES,      zDEBUGPUBTYPES},
  {'T', "trace_aranges",      OPTDWARF_TRACE_ARANGES,       zDEBUGTRACEARANGES},
  {'u', "trace_abbrev",       OPTDWARF_TRACE_ABBREV,        zDEBUGTRACEABBREV},
  {'U', "trace_info",         OPTDWARF_TRACE_INFO,          zDEBUGTRACEINFO},
  {'g', "gdb_index",          OPTDWARF_GDB_INDEX,           zDEBUGGDBINDEX},
  {'X', "enhanced",           OPTDWARF_ENHANCED,            zDEBUGENHANCED},
  {0, NULL}
};

