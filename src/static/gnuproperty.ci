#define GNU_PROPERTY_X86_UINT32_OR_LO           (0xc0008000)
#define GNU_PROPERTY_X86_UINT32_OR_HI           (0xc000ffff)

#define GNU_PROPERTY_X86_UINT32_OR_AND_LO       (0xc0010000)
#define GNU_PROPERTY_X86_UINT32_OR_AND_HI       (0xc0017fff)

#define GNU_PROPERTY_X86_FEATURE_2_USED         (GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1)
#define GNU_PROPERTY_X86_FEATURE_2_NEEDED       (GNU_PROPERTY_X86_UINT32_OR_LO + 1)

#define GNU_PROPERTY_X86_COMPAT_ISA_1_USED      (0xc0000000)
#define GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED    (0xc0000001)

#define GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED    (GNU_PROPERTY_X86_UINT32_OR_AND_LO + 0)
#define GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED  (GNU_PROPERTY_X86_UINT32_OR_LO + 0)

static convert_t ecGNUPROPERTY[] = {
  {"x86 ISA used",               GNU_PROPERTY_X86_ISA_1_USED},
  {"x86 ISA needed",             GNU_PROPERTY_X86_ISA_1_NEEDED},
  {"x86 feature",                GNU_PROPERTY_X86_FEATURE_1_AND},
  {"x86 feature used",           GNU_PROPERTY_X86_FEATURE_2_USED},
  {"x86 feature needed",         GNU_PROPERTY_X86_FEATURE_2_NEEDED},
  {"x86 ISA used",               GNU_PROPERTY_X86_COMPAT_ISA_1_USED},
  {"x86 ISA needed",             GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED},
  {"x86 ISA used",               GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED},
  {"x86 ISA needed",             GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED},
  {0, 0}
};

static convert_t ecGNUPROPERTY_X86_FEATURE_1_AND[] = {
  {"IBT",   GNU_PROPERTY_X86_FEATURE_1_IBT},
  {"SHSTK", GNU_PROPERTY_X86_FEATURE_1_SHSTK},
  {0, 0}
};

